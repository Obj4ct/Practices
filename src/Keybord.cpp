// 小苏同学有一个文本编辑器和一个奇怪的键盘。这个键盘有 26 个小写英文字母和退格键(backspace)，一共 27 个键。

// 每次当她按下任何一个小写英文字母的键的时候，文本编辑器就会在当前编辑文本的末端添加对应的字母。
// 例如，假设当前文本是 luog，当她按下 u 键时，文本就会变成 luogu。

// 当她按下退格键的时候，文本编辑器就会删除当前文本的最后一个字母。如果当前文本是空的，则什么都不会发生。
// 例如，如果当前文本是 luogu，当她按下退格键后，文本就会变成 luog。

// 现在，给定小苏的按键情况，已知在初始时文本为空，请你求出小苏按完给定的所有键后的文本是什么。

// 输入格式
// 第一行是一个整数 n（1≤n≤100），表示按键的次数。
// 第二行是 n 个用空格隔开的字符串，依次表示小苏按下的每个按键。

// 输入的每个字符串要么是一个小写字母，表示对应的按键，要么是字符串 <bs>，表示退格键。

// 输出格式
// 输出一行一个字符串，表示小苏按完给定的所有按键后的文本。数据保证输出不是空串。
#include <iostream>
#include <string>
using namespace std;

int main()
{
    // 定义一个整数n，用于存储输入的字符串个数
    int n;
    // 从标准输入读取n
    cin >> n;
    // 定义一个字符串s，用于存储输入的字符串
    string s;
    // 定义一个字符串res，用于存储最终的结果
    string res;
    // 循环n次
    for (int i = 0; i < n; i++)
    {
        // 从标准输入读取字符串s
        cin >> s;
        // 如果字符串s等于"<bs>"
        if (s == "<bs>")
        {
            // 如果res不为空，则删除res的最后一个字符
            if (!res.empty())
                res.pop_back();
        }
        // 否则，将字符串s添加到res的末尾
        else
        {
            res += s;
        }

    }
    // 输出res
    cout << res << endl;
    // 返回0，表示程序正常结束
    return 0;
}